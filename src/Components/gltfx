
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Model(props) {
  const { nodes, materials } = useGLTF("/HeadDefDISPPAChov2.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow

        geometry={nodes.Mesh002.geometry}
        material={facialHairsMat}
        position={[0.71, 2.65, 1.47]}
        rotation={[-1.21, -0.37, 0.93]}
      />
      <mesh
        castShadow
     
        geometry={nodes.Mesh003.geometry}
        material={facialHairsMat}
        position={[-0.69, 2.64, 1.47]}
        rotation={[-1.2, 0.4, -0.96]}
      />
      <mesh
        castShadow
   
        geometry={nodes.Mesh001.geometry}
        material={facialHairsMat}
        position={[-0.69, 2.89, 1.52]}
        rotation={[1.48, 0.34, 0.84]}
      />
      <mesh
        castShadow
        geometry={nodes.Mesh007.geometry}
        material={facialHairsMat}
        position={[0.74, 2.87, 1.51]}
        rotation={[1.42, -0.46, -0.97]}
      />
      <group position={[0.25, 3.03, -1.37]} rotation={[1.29, 0.16, -1.24]}>
        <mesh
          castShadow

          geometry={nodes.NurbsPath004_1.geometry}
          material={materials.HairRoot}
        />
        <mesh
          castShadow

          geometry={nodes.NurbsPath004_2.geometry}
          material={materials.hairStrands}
        />
        <mesh
          castShadow

          geometry={nodes.NurbsPath004_3.geometry}
          material={materials.RootStrandLarge}
        />
      </group>
      <mesh
        castShadow
        geometry={nodes.NurbsPath011.geometry}
        material={materials.HairRoot}
        position={[1.44, 2.7, -0.64]}
        rotation={[-0.01, -0.04, 0.33]}
      />
      <group position={[0.37, 3.09, 1.95]} rotation={[0.2, -1.04, 0.12]}>
        <mesh
          castShadow

          geometry={nodes.NurbsPath031_1.geometry}
          material={materials.RootStrandLarge}
        />
        <mesh
          castShadow

          geometry={nodes.NurbsPath031_2.geometry}
          material={materials.hairStrands}
        />
      </group>
      <mesh
        castShadow
        geometry={nodes.NurbsPath.geometry}
        material={materials.HairRoot}
        position={[1.94, 4.89, 2.22]}
      />
      <mesh
        castShadow
        geometry={nodes.NurbsPath001.geometry}
        material={materials.RootStrandLarge}
        position={[0.61, 4.16, -3.3]}
        rotation={[0.78, -0.87, -1.86]}
      />
      <mesh
        castShadow
        geometry={nodes.Torus.geometry}
        material={new THREE.MeshStandardMaterial({
                    color: "#9d9d9d",
                    metalness: 1,
                    roughness: 0,
                  })}
        position={[1.4, 2, -0.01]}
        rotation={[0, 0.39, -Math.PI / 2]}
      />
      <mesh
        castShadow
        geometry={nodes.NurbsPath027.geometry}
        material={materials.RootStrandLarge}
        position={[0.83, 0.52, 0.02]}
        rotation={[0.22, -0.17, -0.25]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere2.geometry}
        material={mobil ? eyeoutMob : eyeout2}
        position={[-0.62, 2.77, 1.14]}
        rotation={[1.44, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bebar.geometry}
        material={nodes.Bebar.material}
        position={[0, 3.25, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere2001.geometry}
        material={mobil ? eyeoutMob : eyeout2}
        position={[0.64, 2.78, 1.24]}
        rotation={[1.44, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Head2001.geometry}
        material={headus}
        position={[0, 3.28, -0.05]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere1002.geometry}
        material={eyeMaterial}
        position={[0.67, 2.79, 1.25]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere1003.geometry}
        material={eyeMaterial}
        position={[0.65, 2.79, 1.25]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Broaux.geometry}
        material={facialHairsMat}
        position={[0, 3.23, -0.02]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

// useGLTF.preload("/HeadDefDISPPAChov2.glb");
