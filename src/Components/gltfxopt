 const { nodes, materials } = useGLTF("/HeadDefDISPPAChov2DOSO.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh002.geometry}
        material={nodes.Mesh002.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh001.geometry}
        material={nodes.Mesh001.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh007.geometry}
        material={nodes.Mesh007.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh003.geometry}
        material={nodes.Mesh003.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NurbsPath011.geometry}
        material={materials.HairRoot}
        position={[0.34, 0.16, 0.23]}
      />
      <group position={[0.34, 0.16, 0.23]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NurbsPath004_1.geometry}
          material={materials.HairRoot}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NurbsPath004_2.geometry}
          material={materials.hairStrands}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NurbsPath004_3.geometry}
          material={materials.RootStrandLarge}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NurbsPath001.geometry}
        material={materials.RootStrandLarge}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NurbsPath.geometry}
        material={materials.HairRoot}
        position={[0.34, 0.16, 0.23]}
      />
      <group position={[0.34, 0.16, 0.23]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NurbsPath031_1.geometry}
          material={materials.RootStrandLarge}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NurbsPath031_2.geometry}
          material={materials.hairStrands}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus.geometry}
        material={materials.silver}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NurbsPath027.geometry}
        material={materials.RootStrandLarge}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere2.geometry}
        material={nodes.Sphere2.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere2001.geometry}
        material={nodes.Sphere2001.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Head2001.geometry}
        material={nodes.Head2001.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bebar.geometry}
        material={nodes.Bebar.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere1002.geometry}
        material={nodes.Sphere1002.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Broaux.geometry}
        material={nodes.Broaux.material}
        position={[0.34, 0.16, 0.23]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere1003.geometry}
        material={nodes.Sphere1003.material}
        position={[0.34, 0.16, 0.23]}
      />
    </group>
  );
}

useGLTF.preload("/HeadDefDISPPAChov2DOSO.glb");